//
//  BSWalletViewController.m
//  BaiSongInternational
//
//  Created by 刘嵩野 on 2018/2/1.
//  Copyright © 2018年 maqihan. All rights reserved.
//

#import "BSWalletViewController.h"
#import "BSWalletTableHeaderView.h"
#import "BSWalletAddressCell.h"
#import "BSWalletControlCell.h"
#import "BSTradeBlockKeyBackUpViewController.h"
#import "BSTradePayoutViewController.h"
#import "BSWalletListViewController.h"


#import "BSTradeListViewController.h"
#import "BSWalletCheckUserViewController.h"
#import "BSBaseNavigationController.h"
#import "BSWalletCache.h"

static NSString * GetBlance = @"Android/Block/getMyBlance";

@interface BSWalletViewController ()<UITableViewDelegate, UITableViewDataSource,UIActionSheetDelegate>
@property (nonatomic) UITableView     *tableView;

@property (nonatomic) BSWalletTableHeaderView * tableHeaderView;
@property (nonatomic) BSWalletData * walletData;
@end

@implementation BSWalletViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    [self commonInit];
}

- (void)viewWillLayoutSubviews
{
    [super viewWillLayoutSubviews];
    
    self.tableView.frame = self.view.bounds;
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    self.walletData = [BSWalletCache shareInstance].walletData;
    self.title = self.walletData.walletName;
    
    [self loadBanlance];
}

#pragma mark- delegate
#pragma mark UITableViewDelegate && UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSInteger numberOfRows = 0;
    
    switch (section) {
        case 0:
        {
            numberOfRows = 1;
        }
            break;
        case 1:
        {
            numberOfRows = 4;
        }
            break;
            
        default:
            break;
    }
    
    return numberOfRows;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CGFloat heightForRow = CGFLOAT_MIN;
    switch (indexPath.section) {
        case 0:
        {
            heightForRow = BSWalletAddressCellHeight;
        }
            break;
            
        case 1:
        {
            heightForRow = BSWalletControlCellHeight;
        }
            break;
            
        default:
            break;
    }
    return heightForRow;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    id cellX;
    switch (indexPath.section) {
        case 0:
        {
       
            BSWalletAddressCell * cell = [BSWalletAddressCell cellForTableView:tableView];
            [cell configureCellForRowAtIndexPath:indexPath model:self.walletData tableView:tableView];
            cellX = cell;
        }
            break;
            
        case 1:
        {
            
            BSWalletControlCell * cell = [BSWalletControlCell cellForTableView:tableView];
            [cell configureCellForRowAtIndexPath:indexPath model:self.walletData tableView:tableView];
            cellX = cell;
        }
            break;
        default:{
            cellX = [UITableViewCell new];
        }
            break;
    }
    return cellX;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    return [UIView new];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    
    return CGFLOAT_MIN;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
//    if (!section) {
//        return self.optionView;
//    }
    return [UIView new];
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
//    if (!section) {
//        return BSTradeWalletOptionViewHeight;
//    }
    return CGFLOAT_MIN;
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    switch (indexPath.section) {
        case 0:
        {
            switch (indexPath.row) {
                case 0:
                {
                    UIPasteboard *pboard = [UIPasteboard generalPasteboard];
                    pboard.string = self.walletData.walletAddress;
                    [self showHint:BSLocalizedString(@"copy.is.successfully")];
                }
                    break;
                case 1:
                {
               
                }
                    break;
                    
                default:
                    break;
            }
        }
            break;
        case 1:
        {
            switch (indexPath.row) {
                case 0:
                {
                    [self.navigationController pushViewController:[BSTradePayoutViewController new] animated:YES];
                    

                }
                    break;
                case 1:
                {
                    [self.navigationController pushViewController:[BSTradeListViewController new] animated:YES];
                }
                    break;
                case 2:
                {
                    BSWalletCheckUserViewController * vc = [[BSWalletCheckUserViewController alloc]initWithWalletData:self.walletData];
                    BSBaseNavigationController * nav = [[BSBaseNavigationController alloc]initWithRootViewController:vc];
                    [self presentViewController:nav animated:YES completion:nil];

                }
                    break;
                case 3:
                {
                    [self.navigationController pushViewController:[BSWalletListViewController new] animated:YES];
                }
                    break;
                    
                default:
                    break;
            }
        }
            break;
            
        default:
            break;
    }
    
}



//- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
//    switch (buttonIndex) {
//        case 0:
//        {
//            [self.navigationController pushViewController:[BSTradePayoutViewController new] animated:YES];
//        }
//            break;
//        case 1:
//        {
//            
//        }
//            break;
//
//        default:
//            break;
//    }
//}




#pragma mark - network
- (void)loadBanlance {
    NSString * url = GetBlance;
    [self showHUDInView:self.view];
    [[BSNetWorking shareInstance] GET:url refresh:YES success:^(id json) {
        [self hideHUD];
        if ([json[@"status"] intValue] == 1) {
            if ([self.walletData.walletAddress isEqualToString:json[@"blockaddress"]]) {
                self.walletData.balance = json[@"balance"];
                [self.tableHeaderView configureHeaderViewWithModel:self.walletData];
            }else {
                //本地钱包与服务器不匹配
                [self.navigationController pushViewController:[BSTradeListViewController new] animated:YES];
            }

            [self.tableView reloadData];
            
        }
    } failure:^(NSError *error) {
        [self hideHUD];
    }];
}


#pragma mark - private method

- (void)commonInit
{
    self.view.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.tableView];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark - setter && getter
- (UITableView *)tableView
{
    if (!_tableView) {
        _tableView                                = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStyleGrouped];
        _tableView.delegate                       = self;
        _tableView.dataSource                     = self;
        _tableView.separatorStyle                 = UITableViewCellSeparatorStyleNone;
        _tableView.showsHorizontalScrollIndicator = NO;
        _tableView.showsVerticalScrollIndicator   = NO;
        _tableView.backgroundColor                = [UIColor clearColor];
        _tableView.tableHeaderView = self.tableHeaderView;
    }
    return _tableView;
}

- (BSWalletTableHeaderView *)tableHeaderView {
    if (!_tableHeaderView) {
        _tableHeaderView = [[BSWalletTableHeaderView alloc]initWithFrame:CGRectMake(0, 0, BSScreen_Width, BSWalletTableHeaderViewHeight)];
    }
    return _tableHeaderView;
}

- (BSWalletData *)walletData {
    if (!_walletData) {
        _walletData = [BSWalletData new];
    }
    return _walletData;
}

@end
